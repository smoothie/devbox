---
-   name: Check if k0s binary exists
    stat:
        path: "{{ k0s_bin_path }}"
    register: k0s_binary_exists
    tags:
        - k0s_setup

-   name: Check if k0s bash completions exists
    stat:
        path: "{{ k0s_bash_completions_path }}"
    register: k0s_bash_completion_file_exists
    tags:
        - k0s_setup

-   name: Check if k0sctl binary exists
    stat:
        path: "{{ k0s_k0sctl_bin_path }}"
    register: k0s_k0sctl_binary_exists
    tags:
        - k0s_setup

-   name: Check if k0sctl bash completions exists
    stat:
        path: "{{ k0s_k0sctl_bash_completions_path }}"
    register: k0s_k0sctl_bash_completion_file_exists
    tags:
        - k0s_setup

-   name: Check if k0s service exists
    command: "systemctl is-enabled {{ k0s_service_name }}"
    failed_when: false
    changed_when: false
    register: k0s_is_service_enabled
    tags:
        - k0s_setup

-   name: Download k0s installer
    get_url:
        url: https://get.k0s.sh
        dest: "{{ k0s_installer_tmp_bin_path }}"
        mode: 0775
    when: >
        not k0s_binary_exists.stat.exists
    tags:
        - k0s_setup

-   name: Download k0sctl binary
    get_url:
        url: "{{ k0s_k0sctl_download_url }}"
        dest: "{{ k0s_k0sctl_tmp_bin_path }}"
        mode: 0775
    when: >
        not k0s_k0sctl_binary_exists.stat.exists
        and k0s_k0sctl_enabled
    tags:
        - k0s_setup

-   name: Copy temporary k0sctl to binary path
    copy:
        remote_src: true
        src: "{{ k0s_k0sctl_tmp_bin_path }}"
        dest: "{{ k0s_k0sctl_bin_path }}"
        mode: a+x
    when: >
        not k0s_k0sctl_binary_exists.stat.exists
        and k0s_k0sctl_enabled
    tags:
        - k0s_setup

-   name: Execute the k0s-installer.sh
    shell: "{{ k0s_installer_tmp_bin_path }}{{ k0s_installer_version }}"
    when: >
        not k0s_binary_exists.stat.exists
    tags:
        - k0s_setup

-   name: Make sure cluster config directory exists
    file:
        path: "{{ k0s_cluster_config_path | dirname }}"
        state: directory
    when: >
        k0s_cluster_config_path is defined and k0s_cluster_config_path
    tags:
        - k0s_setup

-   name: Paste the cluster config
    template:
        src: cluster-config.yaml.j2
        dest: "{{ k0s_cluster_config_path }}"
    when: >
        k0s_cluster_config_path is defined and k0s_cluster_config_path
    tags:
        - k0s_setup

-   name: Install k0s as a service
    command: "{{ k0s_bin_path }} install controller {{ k0s_service_install_args }}{{ k0s_cluster_config_args }}"
    when: >
        'No such file or directory' in k0s_is_service_enabled.stderr
    tags:
        - k0s_setup

-   name: Check k0s bash completion for changes
    shell: "{{ k0s_bin_path }} completion bash | cmp - {{ k0s_bash_completions_path }}"
    failed_when: false
    changed_when: false
    register: k0s_has_bash_completion_changes
    tags:
        - k0s_setup

-   name: Add k0s bash completions
    shell: "{{ k0s_bin_path }} completion bash > {{ k0s_bash_completions_path }}"
    when: >
        not k0s_bash_completion_file_exists.stat.exists
        or k0s_has_bash_completion_changes.stderr | length > 0
    tags:
        - k0s_setup

-   name: Check k0sctl bash completion for changes
    shell: "{{ k0s_k0sctl_bin_path }} completion bash | cmp - {{ k0s_k0sctl_bash_completions_path }}"
    failed_when: false
    changed_when: false
    register: k0s_k0sctl_has_bash_completion_changes
    when: >
        k0s_k0sctl_enabled
    tags:
        - k0s_setup

-   name: Add k0sctl bash completions
    shell: "{{ k0s_k0sctl_bin_path }} completion bash > {{ k0s_k0sctl_bash_completions_path }}"
    when: >
        k0s_k0sctl_enabled and
        (not k0s_k0sctl_bash_completion_file_exists.stat.exists
        or k0s_k0sctl_has_bash_completion_changes.stderr | length > 0)
    tags:
        - k0s_setup

-   name: Start k0s as a service
    command: "{{ k0s_bin_path }} start"
    when: >
        k0s_is_service_enabled.stdout != 'enabled'
    tags:
        - k0s_setup

-   name: Make sure users k0s directory exists
    file:
        path: "{{ k0s_kube_config_path | dirname }}"
        state: directory
    when: >
        k0s_kube_config_path is defined
        and k0s_kube_config_path
        and k0s_kube_config_template_path is defined
        and k0s_kube_config_template_path
    tags:
        - k0s_setup

-   name: Make sure k0s service is in a running state
    service:
        name: k0scontroller
        state: started
    register: k0s_controller_state
    until: k0s_controller_state.status.ActiveState == "active"
    retries: 20
    delay: 15
    tags:
        - k0s_setup

-   name: Wait for pods to get created
    shell: "{{ k0s_bin_path }} kubectl get pods --all-namespaces --output=jsonpath='{.items[*].metadata.name}'"
    register: k0s_status_of_all_pods
    until: item in k0s_status_of_all_pods.stdout
    retries: 20
    delay: 15
    changed_when:
        - item not in k0s_status_of_all_pods.stdout
    with_items:
        - kube-router
        - kube-proxy
        - coredns
    tags:
        - k0s_setup

-   name: Wait for pods to get ready
    command: "{{ k0s_bin_path }} kubectl wait pod --all --for=condition=Ready --namespace=kube-system --timeout=600s"
    register: k0s_result_of_waiting_for_pods
    changed_when:
        - k0s_result_of_waiting_for_pods.delta | regex_search('[0-9]+\\.[0-9]+') | float > 1
    tags:
        - k0s_setup

# Used to connect to kubectl (e.g. when using something like helm)
# See: https://docs.k0sproject.io/v1.28.4+k0s.0/FAQ/?h=kubectl#how-do-i-connect-to-the-cluster
-   name: Copy k0s config for usage with kubectl
    copy:
        src: "{{ k0s_kube_config_template_path }}"
        dest: "{{ k0s_kube_config_path }}"
        remote_src: yes
    when: >
        k0s_kube_config_path is defined
        and k0s_kube_config_path
        and k0s_kube_config_template_path is defined
        and k0s_kube_config_template_path
    tags:
        - k0s_setup
